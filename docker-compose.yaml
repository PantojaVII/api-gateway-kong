version: '3.7'

volumes:
  kong_data: {}

networks:
  kong-net:
    external: false

services:
  db:
    image: postgres:9.5
    environment:
      POSTGRES_MULTIPLE_DATABASES: "${KONG_PG_DATABASE},${KONGA_DB_DATABASE}"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    networks:
      - kong-net
    volumes:
      - ./data/kong_data:/var/lib/postgresql/data

  kong-migrations:
    image: "kong:2.3.2-alpine"
    command: kong migrations bootstrap
    depends_on:
      - db
    environment:
      KONG_DATABASE: ${KONG_DATABASE}
      KONG_PG_DATABASE: ${KONG_PG_DATABASE}
      KONG_PG_HOST: ${KONG_PG_HOST}
      KONG_PG_USER: ${KONG_PG_USER}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
    networks:
      - kong-net
    restart: on-failure

  kong-migrations-up:
    image: "kong:2.3.2-alpine"
    command: kong migrations up && kong migrations finish
    depends_on:
      - db
    environment:
      KONG_DATABASE: ${KONG_DATABASE}
      KONG_PG_DATABASE: ${KONG_PG_DATABASE}
      KONG_PG_HOST: ${KONG_PG_HOST}
      KONG_PG_USER: ${KONG_PG_USER}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
    networks:
      - kong-net
    restart: on-failure

  kong:
    image: "kong:2.3.2-alpine"
    user: "kong"
    depends_on:
      - db
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:${KONG_ADMIN_PORT}'
      KONG_DATABASE: ${KONG_DATABASE}
      KONG_PG_DATABASE: ${KONG_PG_DATABASE}
      KONG_PG_HOST: ${KONG_PG_HOST}
      KONG_PG_USER: ${KONG_PG_USER}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
    networks:
      - kong-net
    ports:
      - "${KONG_HTTP_PORT}:8000/tcp"
      - "${KONG_ADMIN_PORT}:8001/tcp"
      - "${KONG_HTTPS_PORT}:8443/tcp"
      - "${KONG_ADMIN_HTTPS_PORT}:8444/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure

  konga-prepare:
    container_name: konga-prepare
    image: pantsel/konga:latest
    command: >
      -c prepare 
      -a postgres 
      -u postgresql://${KONGA_DB_USER}:${KONGA_DB_PASSWORD}@${KONG_PG_HOST}:5432/${KONGA_DB_DATABASE}
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      - db

  konga:
    container_name: konga
    image: pantsel/konga:latest
    restart: always
    networks:
      - kong-net
    environment:
      DB_ADAPTER: ${DB_ADAPTER}
      DB_HOST: ${KONG_PG_HOST}
      DB_USER: ${KONGA_DB_USER}
      DB_PASSWORD: ${KONGA_DB_PASSWORD}
      TOKEN_SECRET: ${KONGA_TOKEN_SECRET}
      DB_DATABASE: ${KONGA_DB_DATABASE}
      NODE_ENV: production
    depends_on:
      - db
    ports:
      - "${KONGA_PORT}:1337"
